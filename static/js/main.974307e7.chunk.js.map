{"version":3,"sources":["Components/Footer.jsx","Components/Header.jsx","Components/Movie.jsx","actions/searchAction.js","actions/types.js","Components/Loader.jsx","Components/MovieCard.jsx","Components/MoviesConteiner.jsx","Components/SearchForm.jsx","actions/appAction.js","App.js","serviceWorker.js","reducers/appReducer.js","reducers/searchReducer.js","reducers/index.js","store.js","index.js"],"names":["Footer","className","href","Header","to","Movie","this","props","fetchMovie","match","params","id","movie","style","width","src","Poster","alt","Title","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Component","mapDispatchToProps","dispatch","fetch","then","response","json","type","payload","catch","error","console","log","connect","state","movies","Loader","role","MovieCard","imdbID","Year","loading","app","undefined","length","map","index","key","SearchForm","changeInputHandler","e","searchMovie","target","value","submitHandler","preventDefault","fetchMovies","text","setLoading","onSubmit","onChange","placeholder","Search","App","exact","path","component","MoviesConteiner","Boolean","window","location","hostname","initialState","combineReducers","action","middleware","thunk","store","createStore","rootRedusers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.974307e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"App-footer row text-center\">\r\n      <span>\r\n        Developed by <a href=\"https://github.com/NeiNY\">Vlad Kryazevskih</a>\r\n      </span>\r\n      <div>\r\n        Using: React, Redux, Bootstrap & API\r\n        <a href=\"http://www.omdbapi.com/\"> OMDB</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <Link to=\"/\" className=\"col-3 text-center\">\r\n        Movies\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovie } from \"../actions/searchAction\";\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { movie } = this.props;\r\n\r\n    return (\r\n      <div className=\"card mb-2 col-xl-8\" style={{ width: 1000 + \"px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"text-center col-md-6\">\r\n            <img\r\n              src={movie.Poster}\r\n              className=\"img-fluid col-10\"\r\n              alt={movie.Title}\r\n            />\r\n          </div>\r\n          <div className=\"card-body text-start col-md-6\">\r\n            <h5 className=\"card-title\">{movie.Title}</h5>\r\n            <ul className=\"list-group list-group-flush\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Released:</strong> {movie.Released}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Director:</strong> {movie.Director}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movie: state.movies.movie,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchMovie,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n","import { SEACRH_MOVIE, FETCH_MOVIES, FETCH_MOVIE } from \"./types\";\r\n\r\nexport const searchMovie = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: SEACRH_MOVIE,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const fetchMovies = (text) => (dispatch) => {\r\n  return fetch(`https://www.omdbapi.com/?apikey=f151a0ab&s=${text}`)\r\n    .then((response) => response.json())\r\n    .then((response) =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.Search,\r\n      })\r\n    )\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const fetchMovie = (id) => (dispatch) => {\r\n  return fetch(`https://www.omdbapi.com/?apikey=f151a0ab&i=${id}`)\r\n    .then((response) => response.json())\r\n    .then((response) =>\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response,\r\n      })\r\n    )\r\n    .catch((error) => console.log(error));\r\n};\r\n","export const SEACRH_MOVIE = \"MOVIE/SEACRH_MOVIE\";\r\nexport const FETCH_MOVIES = \"MOVIE/FETCH_MOVIES\";\r\nexport const FETCH_MOVIE = \"MOVIE/FETCH_MOVIE\";\r\nexport const LOADING = \"APP/LOADING\";\r\n","import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"spinner-border text-center\" role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className=\"card m-1 col-sm-6\" style={{ width: 18 + \"rem\" }}>\r\n      <Link to={\"/movie/\" + movie.imdbID}>\r\n        <img\r\n          src={movie.Poster}\r\n          className=\"card-img-top img-fluid\"\r\n          alt={movie.Title}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{movie.Title}</h5>\r\n          <small className=\"text-muted\">{movie.Year}</small>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst MoviesConteiner = ({ movies, loading }) => {\r\n  return (\r\n    <>\r\n      {movies !== undefined && movies.length ? (\r\n        movies.map((movie, index) => <MovieCard key={index} movie={movie} />)\r\n      ) : loading && movies !== undefined ? (\r\n        <Loader />\r\n      ) : (\r\n        <h2 className=\"text-center\">Write title of movie</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.movies.movies,\r\n  loading: state.app.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesConteiner);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMovie, fetchMovies } from \"../actions/searchAction\";\r\nimport { setLoading } from \"../actions/appAction\";\r\n\r\nexport class SearchForm extends Component {\r\n  changeInputHandler = (e) => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler} className=\"row my-4 col-11 col-lg-6\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control search col\"\r\n          onChange={this.changeInputHandler}\r\n          placeholder=\"Search...\"\r\n        />\r\n        <button className=\"btn btn-primary col-3 mx-1\">Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  text: state.movies.text,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","import { LOADING } from \"./types\";\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING,\r\n  };\r\n};\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Footer from \"./Components/Footer\";\nimport Header from \"./Components/Header\";\nimport Movie from \"./Components/Movie\";\nimport MoviesConteiner from \"./Components/MoviesConteiner\";\nimport SearchForm from \"./Components/SearchForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"App-main row col-10 offset-1 d-flex justify-content-center\">\n        <SearchForm />\n        <div className=\"App-main row col-md-12 d-flex justify-content-center\">\n          <Route exact path=\"/\" component={MoviesConteiner} />\n          <Route exact path=\"/movie/:id\" component={Movie} />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOADING } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_MOVIE, FETCH_MOVIES, SEACRH_MOVIE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n  movies: [],\r\n  loading: false,\r\n  movie: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEACRH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport appReducer from \"./appReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n  movies: searchReducer,\r\n  app: appReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootRedusers from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootRedusers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}